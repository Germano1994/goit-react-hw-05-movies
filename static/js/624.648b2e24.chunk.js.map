{"version":3,"file":"static/js/624.648b2e24.chunk.js","mappings":"8PACA,GAAgB,gBAAkB,gCAAgC,QAAU,yB,SC+D5E,MA3DA,WACE,OAAkCA,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAgCF,EAAAA,EAAAA,WAAS,GAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOK,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAGXC,EAAY,mCAAG,WAAON,GAAP,iGAEIO,EAAAA,EAAAA,IAAkBP,GAFtB,OAEXQ,EAFW,OAGjBX,EAAkBW,EAAOC,SACzBV,GAAY,GAJK,gDAMjBW,QAAQC,MAAM,kCAAd,MANiB,yDAAH,sDAuBlB,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,IAAIC,gBAAgBV,EAASJ,QACjDM,EAAaO,EAAYE,IAAI,MAAQ,IACrCd,EAAUY,EAAYE,IAAI,MAAQ,GACnC,GAAE,CAACX,EAASJ,UAUX,iBAAKgB,UAAWC,EAAAA,gBAAhB,WACE,0CACA,SAAC,KAAD,CAAMC,GAAE,IAAR,mBACA,kBAAMC,SAXW,SAACC,GACpBA,EAAMC,iBACNf,EAAac,EAAME,OAAO,GAAGC,OAC7B,IAAMC,EAAS,aAASJ,EAAME,OAAO,GAAGC,OACxCrB,EAAS,CAAEF,OAAQwB,GACpB,EAMG,WACE,kBACEC,KAAK,OACLF,MAAOvB,EACP0B,YAAY,gBACZC,SAAU,SAACC,GAAD,OAAO3B,EAAU2B,EAAEN,OAAOC,MAA1B,KAEZ,mBAAQE,KAAK,SAAb,uBAED3B,IACC,wBACGF,EAAKiC,KAAI,SAACC,GAAD,OACR,yBACE,SAAC,KAAD,CAAMZ,GAAE,kBAAaY,EAAMC,IAAMf,UAAWC,EAAAA,UAA5C,SACGa,EAAME,SAFFF,EAAMC,GADP,QAWnB,C,+LC5DKE,EAAU,mCAEVC,EAAW,+BAGJC,EAAmB,mCAAG,6GAERC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,qBAA0C,CAC/DG,OAAQ,CACNC,QAASL,KAJkB,cAEzBM,EAFyB,yBAOxBA,EAAS3C,KAAKa,SAPU,oGAAH,qDAanB+B,EAA0B,mCAAG,WAAOT,GAAP,gGAEbK,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BH,EAA/B,mBAAoD,CACzEM,OAAQ,CACNC,QAASL,KAJuB,cAE9BM,EAF8B,yBAO7BA,EAAS3C,MAPoB,oGAAH,sDAcxB6C,EAAiB,mCAAG,WAAOV,GAAP,gGAENK,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BH,EAA/B,kCAAmE,CACxFM,OAAQ,CACNC,QAASL,KAJgB,cAEvBM,EAFuB,yBAOtBA,EAAS3C,MAPa,oGAAH,sDAcjB8C,EAAc,mCAAG,WAAOX,GAAP,gGAEHK,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BH,EAA/B,2BAA4D,CACjFM,OAAQ,CACNC,QAASL,KAJa,cAEpBM,EAFoB,yBAOnBA,EAAS3C,MAPU,oGAAH,sDAedW,EAAiB,mCAAG,WAAOP,GAAP,gGAENoC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,yEAAsFlC,GAAU,CACrHqC,OAAQ,CACNC,QAASL,KAJgB,cAEvBM,EAFuB,yBAOtBA,EAAS3C,MAPa,oGAAH,qD","sources":["webpack://react-homework-template/./src/components/Movies.module.css?76c1","components/Movies.jsx","components/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"moviesContainer\":\"Movies_moviesContainer__Tghoa\",\"loading\":\"Movies_loading__NvIcC\"};","import React, { useEffect, useState } from 'react';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport { fetchSearchMovies } from './api';\nimport styles from './Movies.module.css';\n\nfunction Movies() {\n  const [data, setTrendingMovies] = useState([]);\n  const [searched, setSearched] = useState(false);\n  const [search, setSearch] = useState('');\n  const navigate = useNavigate();\n  const location = useLocation();\n\n\n  const searchMovies = async (search) => {\n    try {\n      const movies = await fetchSearchMovies(search);\n      setTrendingMovies(movies.results);\n      setSearched(true); \n    } catch (error) {\n      console.error('Error fetching trending movies:', error);\n    }\n  };\n\n  useEffect(() => {\n    const queryParams = new URLSearchParams(location.search);\n    searchMovies(queryParams.get(\"q\") || '');\n    setSearch(queryParams.get(\"q\") || '');\n  }, [location.search]);\n\n  const handleSearch = (event) => {\n    event.preventDefault();\n    searchMovies(event.target[0].value);\n    const newSearch = `?q=${event.target[0].value}`;\n    navigate({ search: newSearch });\n  };\n\n  return (\n    <div className={styles.moviesContainer}>\n      <h2>Movie search</h2>\n      <Link to={`/`}>Home</Link>\n      <form onSubmit={handleSearch}>\n        <input\n          type=\"text\"\n          value={search}\n          placeholder=\"Search movies\"\n          onChange={(e) => setSearch(e.target.value)}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      {searched && (\n        <ul>\n          {data.map((movie) => (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`} className={styles.movieLink}>\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = 'd674a3ff6872e455972c5f5b224f497e'; \n\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`${BASE_URL}/trending/all/day`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchTrendingMoviesDetails = async (id) => {\n    try {\n      const response = await axios.get(`${BASE_URL}/movie/${id}?language=en-US`, {\n        params: {\n          api_key: API_KEY,\n        },\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n\n  export const fetchMovieReviews = async (id) => {\n    try {\n      const response = await axios.get(`${BASE_URL}/movie/${id}/reviews?language=en-US&page=1`, {\n        params: {\n          api_key: API_KEY,\n        },\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n\n  export const fetchMovieCast = async (id) => {\n    try {\n      const response = await axios.get(`${BASE_URL}/movie/${id}/credits?language=en-US`, {\n        params: {\n          api_key: API_KEY,\n        },\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n\n\n  export const fetchSearchMovies = async (search) => {\n    try {\n      const response = await axios.get(`${BASE_URL}/search/movie?include_adult=false&language=en-US&page=1&query=${search}`, {\n        params: {\n          api_key: API_KEY,\n        },\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n\n"],"names":["useState","data","setTrendingMovies","searched","setSearched","search","setSearch","navigate","useNavigate","location","useLocation","searchMovies","fetchSearchMovies","movies","results","console","error","useEffect","queryParams","URLSearchParams","get","className","styles","to","onSubmit","event","preventDefault","target","value","newSearch","type","placeholder","onChange","e","map","movie","id","title","API_KEY","BASE_URL","fetchTrendingMovies","axios","params","api_key","response","fetchTrendingMoviesDetails","fetchMovieReviews","fetchMovieCast"],"sourceRoot":""}