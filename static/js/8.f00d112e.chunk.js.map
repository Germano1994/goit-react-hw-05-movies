{"version":3,"file":"static/js/8.f00d112e.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Cast.module.css?f72c","components/Cast.jsx","webpack://react-homework-template/./src/components/Reviews.module.css?0159","components/Reviews.jsx","webpack://react-homework-template/./src/components/MovieDetails.module.css?5587","components/MovieDetails.jsx","components/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast\":\"Cast_cast__rO2Iv\",\"actorName\":\"Cast_actorName__kdhSK\",\"character\":\"Cast_character__r3Kl0\",\"loading\":\"Cast_loading__OYwLL\",\"error\":\"Cast_error__Cc0nh\",\"castList\":\"Cast_castList__aP658\",\"castItem\":\"Cast_castItem__Hn3OX\"};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from './api';\nimport styles from './Cast.module.css';\n\nfunction Cast() {\n  const { movieId } = useParams();\n\n  const [data, setTrendingMovies] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchMovies = async (movieId) => {\n      try {\n        const movies = await fetchMovieCast(movieId);\n        setTrendingMovies(movies);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching trending movies:', error);\n      }\n    };\n\n    fetchMovies(movieId);\n  }, [movieId]);\n\n  if (loading) {\n    return <div className={styles.loading}>Loading...</div>;\n  }\n\n  return (\n    <div className={styles.cast}>\n      <h2>Cast</h2>\n      <ul className={styles.castList}>\n        {data.cast.map((actor) => (\n          <li key={actor.id} className={styles.castItem}>\n            {actor.profile_path ? (\n              <img src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`} alt=\"\" />\n            ) : (\n              <p>Sorry, image not available</p>\n            )}\n            <p className={styles.actorName}>{actor.name}</p>\n            <p className={styles.character}>Character: {actor.character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Cast;\n","// extracted by mini-css-extract-plugin\nexport default {\"reviews\":\"Reviews_reviews__+VvJ4\",\"loading\":\"Reviews_loading__r1+JG\",\"error\":\"Reviews_error__C9I9B\",\"reviewsHeader\":\"Reviews_reviewsHeader__iTHFC\",\"reviewsList\":\"Reviews_reviewsList__AH-Wg\",\"reviewItem\":\"Reviews_reviewItem__Zf9-V\",\"reviewAuthor\":\"Reviews_reviewAuthor__ToQNp\",\"reviewContent\":\"Reviews_reviewContent__5Gwrr\"};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from './api';\nimport styles from './Reviews.module.css';\n\nfunction Reviews() {\n  const { movieId } = useParams();\n  const [data, setTrendingMovies] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchMovies = async (movieId) => {\n      try {\n        const movies = await fetchMovieReviews(movieId);\n        setTrendingMovies(movies);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching trending movies:', error);\n      }\n    };\n\n    fetchMovies(movieId);\n  }, [movieId]);\n\n  if (loading) {\n    return <div className={styles.loading}>Loading...</div>;\n  }\n\n  return (\n    <div className={styles.reviews}>\n      <h2 className={styles.reviewsHeader}>Reviews</h2>\n      <ul className={styles.reviewsList}>\n        {data.results.length > 0 ? (\n          data.results.map((review) => (\n            <li key={review.id} className={styles.reviewItem}>\n              <h3 className={styles.reviewAuthor}>{review.author}</h3>\n              <p className={styles.reviewContent}>{review.content}</p>\n            </li>\n          ))\n        ) : (\n          <div>Sorry, we don't have any reviews...</div>\n        )}\n      </ul>\n    </div>\n  );\n}\n\nexport default Reviews;\n","// extracted by mini-css-extract-plugin\nexport default {\"movieDetails\":\"MovieDetails_movieDetails__VQn5L\",\"container\":\"MovieDetails_container__awhNg\",\"details\":\"MovieDetails_details__O-aFp\",\"moviesDetails\":\"MovieDetails_moviesDetails__TpsqM\",\"backButton\":\"MovieDetails_backButton__6PzFO\",\"castButton\":\"MovieDetails_castButton__mPB61\",\"additional\":\"MovieDetails_additional__c2f4x\",\"styledMovieDetails\":\"MovieDetails_styledMovieDetails__MgYaE\"};","import React, { useEffect, useState } from 'react';\nimport { Routes, useParams, Link, Route, useNavigate } from 'react-router-dom';\nimport { fetchTrendingMoviesDetails } from './api';\nimport Cast from './Cast';\nimport Reviews from './Reviews';\nimport styles from './MovieDetails.module.css';\n\nfunction MovieDetails() {\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n\n  const [trendingMovies, setTrendingMovies] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchMovies = async (movieId) => {\n      try {\n        const movies = await fetchTrendingMoviesDetails(movieId);\n        setTrendingMovies(movies);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching trending movies:', error);\n      }\n    };\n\n    fetchMovies(movieId);\n  }, [movieId]);\n\n  if (loading) {\n    return <div className={styles.loading}>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <div className={styles.container}>\n        <div className={styles.moviesDetails}>\n          <Link onClick={()=>navigate(-1)} className={styles.backButton}>Back</Link> {}\n          <img src={`https://image.tmdb.org/t/p/w400${trendingMovies.poster_path}`} alt=\"\" />\n          <div className={styles.details}>\n            <h2>{trendingMovies.title}</h2>\n            <p>Overview: {trendingMovies.overview}</p>\n            <p>User Score: {trendingMovies.vote_average}</p>\n            <p>Genres: {trendingMovies.genres.map(genre => genre.name).join(', ')}</p>\n          </div>\n        </div>\n        <div className={styles.additional}>\n          <h3>Additional Information</h3>\n          <Link to=\"cast\" className={styles.link}>\n            Cast\n          </Link>\n          <Link to=\"reviews\" className={styles.link}>\n            Reviews\n          </Link>\n        </div>\n      </div>\n      <Routes>\n        <Route path=\"cast\" element={<Cast />} />\n        <Route path=\"reviews\" element={<Reviews />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = 'd674a3ff6872e455972c5f5b224f497e'; \n\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`${BASE_URL}/trending/all/day`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchTrendingMoviesDetails = async (id) => {\n    try {\n      const response = await axios.get(`${BASE_URL}/movie/${id}?language=en-US`, {\n        params: {\n          api_key: API_KEY,\n        },\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n\n  export const fetchMovieReviews = async (id) => {\n    try {\n      const response = await axios.get(`${BASE_URL}/movie/${id}/reviews?language=en-US&page=1`, {\n        params: {\n          api_key: API_KEY,\n        },\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n\n  export const fetchMovieCast = async (id) => {\n    try {\n      const response = await axios.get(`${BASE_URL}/movie/${id}/credits?language=en-US`, {\n        params: {\n          api_key: API_KEY,\n        },\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n\n\n  export const fetchSearchMovies = async (search) => {\n    try {\n      const response = await axios.get(`${BASE_URL}/search/movie?include_adult=false&language=en-US&page=1&query=${search}`, {\n        params: {\n          api_key: API_KEY,\n        },\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n\n"],"names":["movieId","useParams","useState","data","setTrendingMovies","loading","setLoading","useEffect","fetchMovies","fetchMovieCast","movies","console","error","className","styles","cast","map","actor","profile_path","src","alt","name","character","id","fetchMovieReviews","results","length","review","author","content","navigate","useNavigate","trendingMovies","fetchTrendingMoviesDetails","onClick","poster_path","title","overview","vote_average","genres","genre","join","to","path","element","API_KEY","BASE_URL","fetchTrendingMovies","axios","params","api_key","response","fetchSearchMovies","search"],"sourceRoot":""}